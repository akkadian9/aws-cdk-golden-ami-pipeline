{
	"baseImage": ec2.MachineImage.latestAmazonLinux(),
	"ami_component_bucket_name": s3.Bucket.fromBucketName(this, 'MyBucket', "<New_S3_Bucket_Name>"),
	"ami_component_bucket_create": true,
	"attr": "blog-demo",
    "sns_topic": sns.Topic.fromTopicArn(this, 'MyTopic', "arn:aws:sns:us-east-1:993348658863:test"),
	"imagePipelineName": "golden-ami-recipe-blog-demo",
	"components_prefix": "components",
	"instanceProfileName": "golden-ami-instance-profile-blog-demo",
	"instanceProfileRoleName": "golden-ami-instance-profile-role-blog-demo",
	"iamEncryption": false,
	"schedule": {
	  "scheduleExpression": "cron(0 10 * * ? *)"
	},
	"amitag": {
	  "env": "dev",
	  "Name": "golden-ami-{{imagebuilder:buildDate}}",
	  "Date_Created": "{{imagebuilder:buildDate}}"
	},
	"tag": {
	  "env": "dev",
	  "Name": "golden-ami-blog-demo"
	},
	"image_recipe": {
	  "image_recipe_version": "1.0.0",
	  "image_recipe_name": "golden-ami-recipe-blog-demo",
	  "volume_size": 2048,
	  "volume_type": "gp2",
	  "deleteOnTermination": true
	},
	"infrastructure": {
	  "name": "golden-ami-infra-blog-demo",
	  "instance_type": [
		ec2.InstanceType.of(ec2.InstanceClass.T2, ec2.InstanceSize.LARGE),
		ec2.InstanceType.of(ec2.InstanceClass.T2, ec2.InstanceSize.SMALL)
	  ],
	  "subnet_id": ec2.Subnet.fromSubnetId(this,'subnet-name', "EXISTING_SUBNET_ID"),
	  "security_groups": [
		ec2.SecurityGroup.fromSecurityGroupId(this,'sg-name', "<EXISTING_SECURITY_GROUP_ID>")
	  ]
	},
	"Component_Config": {
	  "Build": [
		{
		  "name": "build1",
		  "file": "components/build1.yaml",
		  "version": "1.0.0",
		  "parameter": [
			{
			  "name": "testparam",
			  "value": [
				"samplevalue"
			  ]
			}
		  ]
		}
	  ],
	  "Test": [
		{
		  "name": "test1",
		  "file": "components/test1.yaml",
		  "version": "1.0.0"
		}
	  ]
	},
	"Distribution": [
	  {
		"region": "us-east-1",
		"accounts": [
		  "111111111111"
		]
	  }
	],
	"distributionName": "golden-ami-distribution-blog-demo",
	"distributionDescription": "Distribution settings for Golden AMI Pipeline",
	"resource_removal_policy": cdk.RemovalPolicy.DESTROY,
	"default_Component_Config" : {
		"Build": [
		  {
			"arn": "arn:aws:imagebuilder:us-east-1:aws:component/update-linux/1.0.2/1"
		  }
		],
		"Test": [
		  {
			"arn": "arn:aws:imagebuilder:us-east-1:aws:component/reboot-test-linux/1.0.0/1"
		  }
		]
	}
  }